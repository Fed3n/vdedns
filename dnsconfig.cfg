/*LIBCONFIG CONFIGURATION FILE*/

/*BRIEF DOCUMENTATION*/
/*
Configuration entries for the program are:

#List of ipv4 or ipv6 dns addresses for query forwarding
dns_servers = ();

#Hash/otip domains list
#Hash domains only require a domain string
#Otip domains require at least a domain string and a password (time has a default value)
domains = {
    hash = ("domains");
    otip = ({dom="", pswd="", time=integer});
};

#List of addresses objects made of a domain and either 
#a ipv4 addresses list, ipv6 addresses list or both.
#Those domains will be solved locally with given addresses
addresses = (
    { dom="", ip4=(), ip6=() };
);

#Virtual interfaces to setup when using --stacks (-s) option
#Type is stack type (e.g. vdestack), vnl is virtual network locator (e.g. /var/run/vde.ctl)
#config is a iothconfig configuration string
#For more information see libioth and iothconf documentation
#An interface can be set for both listener and querier or individually.
#Both takes precedence over individual configurations
vinterface = {
    both = {type=""; vnl=""; config="";};
    dns = {type=""; vnl=""; config="";};
    query = {type=""; vnl=""; config="";};
};

#List of authorized address/mask combination when using --auth (-a) option
authorization = (
    { ip=""; mask="";};
);
*/
/*#######################*/


/*CONFIGURATION FILE*/

dns_servers = (
   /*"10.4.5.6",*/
   "192.168.1.221",
    /*"192.168.65.30",*/
    /*
    "8.8.8.8",
    "1.1.1.1",
    "80.80.80.80"*/
);

domains = {
    hash = (
        "hash.dom",
        "other.hash.dom",
        "same.dom",
        "hash.mine",
        "myhashdomain.org",
        "instagram.com",
        "cs.unibo.it"
    );
    otip = (
        {
            dom="dom.secret";
            pswd="secret";
            time=8;
        },
        {
            dom="test.dom.secret";
            pswd="otipsec";
        },
        {
            dom="mydom.mine";
            pswd="mine";
        },
        {
            dom="otip.same.dom";
            pswd="hash";
        }
    );
};

addresses = (
    {
        dom="nodomain.none";
        ip4=("10.11.12.13");
        ip6=("fc00:4242::17");
    },
    {
        dom="other.hash.dom";
        ip6=("fc00:aaab::", "fc00:bbbb::");
    },
    {
        dom="same.dom";
        ip6=("fc00:aaaa::");
    },
    {
        dom="hash.mine";
        ip6=("fc00:fdfd::43");
    },
    {
        dom="mydom.mine";
        ip6=("fc00:fdfd::42");
    },
    {
        dom="myhashdomain.org";
        ip6=("2001:a1:b2:c3::")
    },
    {
        dom="truncate.me";
        ip6=("fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1",
        "fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1","fc00:12ab::1");
    }
);

vinterface = {
/*
    both = {
        type="vdestack";
        vnl="vxvde://234.0.0.1";
        config="eth,ip=10.0.0.1/24,ip=fc00:aaaa::1/64,gw=10.0.0.254,fqdn=local.dns.fwd";
    }; */
    dns = {
        type="vdestack";
        vnl="vxvde://234.0.0.1";
        config="eth,ip=10.0.0.1/24,ip=fc00:aaaa::1/64,gw=10.0.0.254,fqdn=local.dns.fwd";
    };
    /*
    query = {
        type="vdestack";
        vnl="vxvde://234.0.0.1";
        config="eth,ip=10.0.0.2/24,ip=fc00:aaaa::2/64,gw=10.0.0.254,fqdn=local.dns.query"; 
    }; */
};

authorization = (
    {
        ip="192.168.0.0";
        mask="255.255.0.0";
    },
    {
        ip="fc00:aaaa::42";
        mask="ffff:ffff:ffff:ffff::";
    },
    {
        ip="127.0.0.0";
        mask="255.255.255.0";
    },
    {
        ip="10.0.0.254";
        mask="255.255.255.255";
    },
    {
        ip="10.0.0.3";
        mask="255.255.255.255";
    }
);

